// Generated by https://quicktype.io

export interface ListPropertiesResponse {
    hits:             Property[];
    nbHits:           number;
    page:             number;
    nbPages:          number;
    hitsPerPage:      number;
    exhaustiveNbHits: boolean;
    exhaustiveTypo:   boolean;
    query:            string;
    params:           string;
    processingTimeMS: number;
}

export interface Property {
    id:               number;
    name:             string;
    name_l1:          string;
    externalID:       string;
    slug:             string;
    slug_l1:          string;
    _geoloc:          Geo;
    geography:        Geo;
    level:            number;
    hierarchy:        PropertyHierarchy[];
    adCount:          number;
    aliases:          string[];
    type:             null;
    hasBuilding:      boolean;
    trackID:          string;
    roles:            null;
    objectID:         string;
    _highlightResult: HighlightResult;
}

export interface Geo {
    lat: number;
    lng: number;
}

export interface HighlightResult {
    name:       ExternalID;
    externalID: ExternalID;
    hierarchy:  HighlightResultHierarchy[];
    aliases?:   ExternalID[];
}

export interface ExternalID {
    value:             string;
    matchLevel:        MatchLevel;
    fullyHighlighted?: boolean;
    matchedWords:      MatchedWord[];
}

export enum MatchLevel {
    Full = "full",
    None = "none",
}

export enum MatchedWord {
    Abu = "abu",
    Dhabi = "dhabi",
}

export interface HighlightResultHierarchy {
    externalID: ExternalID;
    slug:       ExternalID;
}

export interface PropertyHierarchy {
    id:         number;
    level:      number;
    externalID: string;
    name:       string;
    name_l1:    string;
    slug:       string;
    slug_l1:    string;
}
